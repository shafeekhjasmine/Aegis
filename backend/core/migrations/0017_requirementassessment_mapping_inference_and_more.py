# Generated by Django 5.0.6 on 2024-07-08 07:04

import django.core.validators
import django.db.models.deletion
import iam.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0016_riskscenario_owner"),
        ("iam", "0005_alter_user_managers"),
    ]

    operations = [
        migrations.AddField(
            model_name="requirementassessment",
            name="mapping_inference",
            field=models.JSONField(default=dict, verbose_name="Mapping inference"),
        ),
        migrations.CreateModel(
            name="RequirementMappingSet",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="published"),
                ),
                (
                    "urn",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        unique=True,
                        verbose_name="URN",
                    ),
                ),
                (
                    "ref_id",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Reference ID",
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="Provider"
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, null=True, verbose_name="Name"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "annotation",
                    models.TextField(blank=True, null=True, verbose_name="Annotation"),
                ),
                (
                    "target_framework",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="target_framework",
                        to="core.framework",
                        verbose_name="Target framework",
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        default=iam.models.Folder.get_root_folder,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_folder",
                        to="iam.folder",
                    ),
                ),
                (
                    "library",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requirement_mapping_sets",
                        to="core.loadedlibrary",
                    ),
                ),
                (
                    "source_framework",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="source_framework",
                        to="core.framework",
                        verbose_name="Source framework",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RequirementMapping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "relationship",
                    models.CharField(
                        choices=[
                            ("subset", "Subset"),
                            ("intersect", "Intersect"),
                            ("equal", "Equal"),
                            ("superset", "Superset"),
                            ("not_related", "Not related"),
                        ],
                        default="not_related",
                        max_length=20,
                        verbose_name="Relationship",
                    ),
                ),
                (
                    "rationale",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("syntactic", "Syntactic"),
                            ("semantic", "Semantic"),
                            ("functional", "Functional"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Rationale",
                    ),
                ),
                (
                    "strength_of_relationship",
                    models.PositiveSmallIntegerField(
                        null=True,
                        validators=[django.core.validators.MaxValueValidator(10)],
                        verbose_name="Strength of relationship",
                    ),
                ),
                (
                    "annotation",
                    models.TextField(blank=True, null=True, verbose_name="Annotation"),
                ),
                (
                    "target_requirement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="target_requirement",
                        to="core.requirementnode",
                        verbose_name="Target requirement",
                    ),
                ),
                (
                    "source_requirement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="source_requirement",
                        to="core.requirementnode",
                        verbose_name="Source requirement",
                    ),
                ),
                (
                    "mapping_set",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mappings",
                        to="core.requirementmappingset",
                        verbose_name="Mapping set",
                    ),
                ),
            ],
        ),
    ]
